package main

import (
	"fmt"
	"time"
)

var sumEvenValuedTerms int

func main() {
	// 	Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
	// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
	// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

	const max int = 4000000
	thisNum := 1
	lastNum := 0

	start := time.Now()

	fibonacci(&thisNum, &lastNum, max)

	elapsed := time.Since(start)

	fmt.Printf("The sum of all even-valued terms is: %d. Execution time: %d", sumEvenValuedTerms, elapsed)
}

func fibonacci(thisNum *int, lastNum *int, max int) {
	if *thisNum < max {
		nextNum := *thisNum + *lastNum
		fibonacci(&nextNum, thisNum, max)

		if nextNum%2 == 0 {
			sumEvenValuedTerms += nextNum
		}
	}
}
